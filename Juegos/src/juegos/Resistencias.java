/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juegos;

/**
 *
 * @author USER
 */
public class Resistencias extends javax.swing.JFrame {

    /**
     * Creates new form Resistencias
     */
    
    int cl1, cl2,cl3,cl4;
     float  resultadom, concatenar, resultado;
     int Opcion1, Opcion2, Opcion3, Opcion4;
     
     
    public Resistencias() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        L1 = new javax.swing.JTextField();
        L2 = new javax.swing.JTextField();
        L3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        L4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ResultadoMuestra = new javax.swing.JTextField();
        ToleranciaMuestra = new javax.swing.JTextField();
        Linea1 = new javax.swing.JComboBox<>();
        Linea2 = new javax.swing.JComboBox<>();
        Linea3 = new javax.swing.JComboBox<>();
        LineaTolerancia = new javax.swing.JComboBox<>();
        Calculo = new javax.swing.JButton();
        Reinicio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CALCULADORA VALOR RESISTENCIAS");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel3.setText("El Valor De La Resisitencia Es");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel4.setText("La Tolerancia De La Resisitencia Es");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel5.setText("Lineas De Resistencia");

        L1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L1ActionPerformed(evt);
            }
        });

        L2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L2ActionPerformed(evt);
            }
        });

        L3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L3ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel7.setText("Linea De Tolerancia");

        L4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L4ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/oo.png"))); // NOI18N

        ResultadoMuestra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ResultadoMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultadoMuestraActionPerformed(evt);
            }
        });

        ToleranciaMuestra.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N

        Linea1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Linea1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione color linea 1", "Cafe", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Morado", "Gris", "Blanco" }));
        Linea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Linea1ActionPerformed(evt);
            }
        });

        Linea2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Linea2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione color linea 2", "Negro", "Cafe", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Morado", "Gris", "Blanco" }));
        Linea2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Linea2ActionPerformed(evt);
            }
        });

        Linea3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Linea3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione color linea 3", "Negro", "Cafe", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Morado", "Gris", "Blanco" }));
        Linea3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Linea3ActionPerformed(evt);
            }
        });

        LineaTolerancia.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        LineaTolerancia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione color Tolerancia", "Dorado", "Plateado" }));
        LineaTolerancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LineaToleranciaActionPerformed(evt);
            }
        });

        Calculo.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Calculo.setText("Calcular");
        Calculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculoActionPerformed(evt);
            }
        });

        Reinicio.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        Reinicio.setText("Reiniciar");
        Reinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReinicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(L1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(L2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(380, 380, 380)
                                .addComponent(L4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(L3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(Calculo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(Reinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Linea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Linea2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Linea3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(LineaTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(86, 86, 86))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ResultadoMuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(172, 172, 172)
                                .addComponent(ToleranciaMuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(207, 207, 207)
                                .addComponent(jLabel4)))))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(L1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(L3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResultadoMuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToleranciaMuestra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Linea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Linea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Linea3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LineaTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Calculo)
                    .addComponent(Reinicio))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void L4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_L4ActionPerformed

    private void L1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_L1ActionPerformed

    private void L2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_L2ActionPerformed

    private void L3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_L3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_L3ActionPerformed

    private void ResultadoMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultadoMuestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResultadoMuestraActionPerformed

    private void Linea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Linea1ActionPerformed
        // TODO add your handling code here:
         Opcion1 = Linea1.getSelectedIndex();

        switch(Opcion1)
        {
            case 0:
                cl1 = 0;
                 
            break;
            case 1:
            cl1 = 1;
            L1.setBackground(java.awt.Color.getHSBColor(12,250,100));
            Linea1.setBackground(java.awt.Color.getHSBColor(12,250,100));
            break;
            case 2:
            cl1 = 2;
            L1.setBackground(java.awt.Color.RED);
            Linea1.setBackground(java.awt.Color.RED);
            break;
            case 3:
            cl1 = 3;
            L1.setBackground(java.awt.Color.ORANGE);
            Linea1.setBackground(java.awt.Color.ORANGE);
            break;
            case 4:
            cl1 = 4;
            L1.setBackground(java.awt.Color.YELLOW);
            Linea1.setBackground(java.awt.Color.YELLOW);
            break;
            case 5:
            cl1 = 5;
            L1.setBackground(java.awt.Color.GREEN);
            Linea1.setBackground(java.awt.Color.GREEN);
            break;
            case 6:
            cl1 = 6;
            L1.setBackground(java.awt.Color.BLUE);
            Linea1.setBackground(java.awt.Color.BLUE);
            break;
            case 7:
            cl1 = 7;
            L1.setBackground(java.awt.Color.MAGENTA);
            Linea1.setBackground(java.awt.Color.MAGENTA);
            break;
            case 8:
            cl1 = 8;
            L1.setBackground(java.awt.Color.GRAY);
            Linea1.setBackground(java.awt.Color.GRAY);
            break;
            case 9:
            cl1 = 9;
            L1.setBackground(java.awt.Color.WHITE);
            Linea1.setBackground(java.awt.Color.WHITE);
            break;
        
    }    
    }//GEN-LAST:event_Linea1ActionPerformed

    private void CalculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculoActionPerformed
        // TODO add your handling code here:
        
        cl1*=10;
        concatenar = cl1 + cl2;
        
        resultado= concatenar * cl3;
        
        if ((cl1 == 0)||(cl2 == -1)||(cl3 == -1)) {
        String mresultado = "NO selecciono un color para todas las lineas";
           this.ResultadoMuestra.setText(this.ResultadoMuestra.getText()+mresultado);
    }
        else {    
        if((resultado>0)&&(resultado<1000)){
               
                String mresultado = resultado + "Ω";
           this.ResultadoMuestra.setText(this.ResultadoMuestra.getText()+mresultado);  
        }
        else if((resultado>=1000)&&(resultado<1000000)) {
            resultadom = resultado / 1000;
            String mresultado = resultadom + "K Ω";
                this.ResultadoMuestra.setText(this.ResultadoMuestra.getText()+mresultado);
        }
        else if((resultado>=1000000)&&(resultado<1000000000)) {
            resultadom = resultado / 1000000;
            String mresultado = resultadom + "M Ω";
                this.ResultadoMuestra.setText(this.ResultadoMuestra.getText()+mresultado);
        }
       else if((resultado>1000000000)) {
            resultadom = resultado / 1000000000;
            String mresultado = resultadom + "G Ω";
                this.ResultadoMuestra.setText(this.ResultadoMuestra.getText()+mresultado);
        }
        }
        
        if (cl4 == 0) {
                 String Toleranciam = "NO selecciono un color";
                 this.ToleranciaMuestra.setText(this.ToleranciaMuestra.getText()+Toleranciam);
                 }
        else {
            String Toleranciam = cl4 + "%";
        this.ToleranciaMuestra.setText(this.ToleranciaMuestra.getText()+Toleranciam);
        }
    }//GEN-LAST:event_CalculoActionPerformed

    private void ReinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReinicioActionPerformed
        // TODO add your handling code here:
        
        cl1=0;
        cl2=0;
        cl3=0;
        cl4=0;
        
        ResultadoMuestra.setText("");
        ToleranciaMuestra.setText("");
        L1.setBackground(java.awt.Color.WHITE);
        L2.setBackground(java.awt.Color.WHITE);
        L3.setBackground(java.awt.Color.WHITE);
        L4.setBackground(java.awt.Color.WHITE);
        
        Linea1.setBackground(java.awt.Color.WHITE);
        Linea2.setBackground(java.awt.Color.WHITE);
        Linea3.setBackground(java.awt.Color.WHITE);
        LineaTolerancia.setBackground(java.awt.Color.WHITE);
        
        Linea1.setSelectedIndex (0);
        Linea2.setSelectedIndex (0);
        Linea3.setSelectedIndex (0);
        LineaTolerancia.setSelectedIndex (0);

        
     
    }//GEN-LAST:event_ReinicioActionPerformed

    private void Linea2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Linea2ActionPerformed
        // TODO add your handling code here:
        
        Opcion2 = Linea2.getSelectedIndex();

        switch(Opcion2)
        {
             case 0:
                 cl2 =-1;
                 
            break;
            case 1:
            cl2 = 0;
            L2.setBackground(java.awt.Color.BLACK);
            Linea2.setBackground(java.awt.Color.BLACK);
            break;
            case 2:
            cl2 = 1;
            L2.setBackground(java.awt.Color.getHSBColor(12,250,100));
            Linea2.setBackground(java.awt.Color.getHSBColor(12,250,100));
            break;
            case 3:
            cl2 = 2;
            L2.setBackground(java.awt.Color.RED);
            Linea2.setBackground(java.awt.Color.RED);
            break;
            case 4:
            cl2 = 3;
            L2.setBackground(java.awt.Color.ORANGE);
            Linea2.setBackground(java.awt.Color.ORANGE);
            break;
            case 5:
            cl2 = 4;
            L2.setBackground(java.awt.Color.YELLOW);
            Linea2.setBackground(java.awt.Color.YELLOW);
            break;
            case 6:
            cl2 = 5;
            L2.setBackground(java.awt.Color.GREEN);
            Linea2.setBackground(java.awt.Color.GREEN);
            break;
            case 7:
            cl2 = 6;
            L2.setBackground(java.awt.Color.BLUE);
            Linea2.setBackground(java.awt.Color.BLUE);
            break;
            case 8:
            cl2 = 7;
            L2.setBackground(java.awt.Color.MAGENTA);
            Linea2.setBackground(java.awt.Color.MAGENTA);
            break;
            case 9:
            cl2 = 8;
            L2.setBackground(java.awt.Color.GRAY);
            Linea2.setBackground(java.awt.Color.GRAY);
            break;
            case 10:
            cl2 = 9;
            L2.setBackground(java.awt.Color.WHITE);
            Linea2.setBackground(java.awt.Color.WHITE);
            break;
        }
        
    }//GEN-LAST:event_Linea2ActionPerformed

    private void Linea3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Linea3ActionPerformed
        // TODO add your handling code here:
        
        Opcion3 = Linea3.getSelectedIndex();

        switch(Opcion3)
        {
             case 0:
                 cl3= -1;
                 
            break;
            case 1:
            cl3 = 1;
            L3.setBackground(java.awt.Color.BLACK);
            Linea3.setBackground(java.awt.Color.BLACK);
            break;
            case 2:
            cl3 = 10;
            L3.setBackground(java.awt.Color.getHSBColor(12,250,100));
            Linea3.setBackground(java.awt.Color.getHSBColor(12,250,100));
            break;
            case 3:
            cl3 = 100;
            L3.setBackground(java.awt.Color.RED);
            Linea3.setBackground(java.awt.Color.RED);
            break;
            case 4:
            cl3 = 1000;
            L3.setBackground(java.awt.Color.ORANGE);
            Linea3.setBackground(java.awt.Color.ORANGE);
            break;
            case 5:
            cl3 = 10000;
            L3.setBackground(java.awt.Color.YELLOW);
            Linea3.setBackground(java.awt.Color.YELLOW);
            break;
            case 6:
            cl3 = 100000;
            L3.setBackground(java.awt.Color.GREEN);
            Linea3.setBackground(java.awt.Color.GREEN);
            break;
            case 7:
            cl3 = 1000000;
            L3.setBackground(java.awt.Color.BLUE);
            Linea3.setBackground(java.awt.Color.BLUE);
            break;
            case 8:
            cl3 = 10000000;
            L3.setBackground(java.awt.Color.MAGENTA);
            Linea3.setBackground(java.awt.Color.MAGENTA);
            break;
            case 9:
            cl3 = 100000000;
            L3.setBackground(java.awt.Color.GRAY);
            Linea3.setBackground(java.awt.Color.GRAY);
            break;
            case 10:
            cl3= 1000000000;
            L3.setBackground(java.awt.Color.WHITE);
            Linea3.setBackground(java.awt.Color.WHITE);
            break;
        }
    }//GEN-LAST:event_Linea3ActionPerformed

    private void LineaToleranciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LineaToleranciaActionPerformed
        // TODO add your handling code here:
        
        Opcion4 = LineaTolerancia.getSelectedIndex();
        

        switch(Opcion4)
        {
             case 0:
                 cl4=0;
                 
            break;
            case 1:
            cl4 = 5;
            L4.setBackground(java.awt.Color.getHSBColor(227,228,229));
            LineaTolerancia.setBackground(java.awt.Color.getHSBColor(227,228,229));
            break;
            case 2:
            cl4 = 10;
            L4.setBackground(java.awt.Color.LIGHT_GRAY);
            LineaTolerancia.setBackground(java.awt.Color.LIGHT_GRAY);
            break;
            
        }
    }//GEN-LAST:event_LineaToleranciaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Resistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Resistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Resistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Resistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Resistencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculo;
    private javax.swing.JTextField L1;
    private javax.swing.JTextField L2;
    private javax.swing.JTextField L3;
    private javax.swing.JTextField L4;
    private javax.swing.JComboBox<String> Linea1;
    private javax.swing.JComboBox<String> Linea2;
    private javax.swing.JComboBox<String> Linea3;
    private javax.swing.JComboBox<String> LineaTolerancia;
    private javax.swing.JButton Reinicio;
    private javax.swing.JTextField ResultadoMuestra;
    private javax.swing.JTextField ToleranciaMuestra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
